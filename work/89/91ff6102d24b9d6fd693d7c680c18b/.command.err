INFO:    Converting SIF file to temporary sandbox...
Looking to launch executable "/usr/local/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/usr/local/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: ./bwamem2/Athal_chr1.fasta
* Entering FMI_search
* Index file found. Loading index from ./bwamem2/Athal_chr1.fasta.bwt.2bit.64
* Reference seq len for bi-index = 60855343
* sentinel-index: 24384153
* Count:
0,	1
1,	19488855
2,	30427672
3,	41366489
4,	60855343

* Reading other elements of the index from files ./bwamem2/Athal_chr1.fasta
* Index prefix: ./bwamem2/Athal_chr1.fasta
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = ./bwamem2/Athal_chr1.fasta.0123
* Reference genome size: 60855342 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 139.3584 MB
2. Memory pre-allocation for BSW: 239.6170 MB
3. Memory pre-allocation for BWT: 77.3142 MB
------------------------------------------
* Threads used (compute): 1
* No. of pipeline threads: 2

[0000] read_chunk: 10000000, work_chunk_size: 10000229, nseq: 67920
	[0000][ M::kt_pipeline] read 67920 sequences (10000229 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000200, nseq: 68006
	[0000][ M::kt_pipeline] read 68006 sequences (10000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 67920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 5097, 27, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (197, 274, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 653)
[0000][PE] mean and std.dev: (271.44, 115.69)
[0000][PE] low and high boundaries for proper pairs: (1, 805)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 551, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (692.81, 635.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 67920 reads in 7.566 CPU sec, 7.820 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000265, nseq: 68004
	[0000][ M::kt_pipeline] read 68004 sequences (10000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 4881, 27, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (195, 270, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (267.59, 113.03)
[0000][PE] low and high boundaries for proper pairs: (1, 779)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (150, 643, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (730.81, 564.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68006 reads in 7.748 CPU sec, 7.955 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000171, nseq: 68016
	[0000][ M::kt_pipeline] read 68016 sequences (10000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 4987, 23, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (193, 271, 345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 649)
[0000][PE] mean and std.dev: (268.34, 117.16)
[0000][PE] low and high boundaries for proper pairs: (1, 801)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 635, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (782.05, 604.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68004 reads in 7.723 CPU sec, 7.831 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000048, nseq: 68018
	[0000][ M::kt_pipeline] read 68018 sequences (10000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 4984, 21, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (193, 271, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 646)
[0000][PE] mean and std.dev: (268.52, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 797)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 537, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (675.81, 643.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68016 reads in 7.603 CPU sec, 7.721 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000142, nseq: 68118
	[0000][ M::kt_pipeline] read 68118 sequences (10000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 4965, 25, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (190, 272, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 652)
[0000][PE] mean and std.dev: (268.46, 118.20)
[0000][PE] low and high boundaries for proper pairs: (1, 806)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (576, 727, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (825.96, 544.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68018 reads in 7.590 CPU sec, 7.672 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000121, nseq: 67954
	[0000][ M::kt_pipeline] read 67954 sequences (10000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 5081, 21, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (185, 266, 341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 653)
[0000][PE] mean and std.dev: (263.14, 116.63)
[0000][PE] low and high boundaries for proper pairs: (1, 809)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 600, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5058)
[0000][PE] mean and std.dev: (1016.20, 1030.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6697)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68118 reads in 7.461 CPU sec, 7.588 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000017, nseq: 68096
	[0000][ M::kt_pipeline] read 68096 sequences (10000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 67954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 4994, 23, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (194, 270, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 641)
[0000][PE] mean and std.dev: (268.79, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 790)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 604, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (909.45, 996.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6608)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 67954 reads in 7.699 CPU sec, 7.797 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000221, nseq: 68104
	[0000][ M::kt_pipeline] read 68104 sequences (10000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 5076, 20, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (189, 267, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (263.55, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 781)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 677, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (676.63, 628.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68096 reads in 7.656 CPU sec, 7.790 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000012, nseq: 67912
	[0000][ M::kt_pipeline] read 67912 sequences (10000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 4925, 20, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (185, 265, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (261.38, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 797)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 590, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (831.26, 673.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68104 reads in 7.713 CPU sec, 7.811 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000217, nseq: 67942
	[0000][ M::kt_pipeline] read 67942 sequences (10000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 67912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 5041, 20, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (195, 270, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 630)
[0000][PE] mean and std.dev: (265.68, 112.25)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 600, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (639.56, 550.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 67912 reads in 7.505 CPU sec, 7.600 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000267, nseq: 67964
	[0000][ M::kt_pipeline] read 67964 sequences (10000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 67942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 5058, 15, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (194, 269, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 641)
[0000][PE] mean and std.dev: (268.03, 115.96)
[0000][PE] low and high boundaries for proper pairs: (1, 790)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 561, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (887.53, 746.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 67942 reads in 7.702 CPU sec, 7.836 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000238, nseq: 67998
	[0000][ M::kt_pipeline] read 67998 sequences (10000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 67964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 4952, 12, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (192, 269, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 642)
[0000][PE] mean and std.dev: (266.70, 116.07)
[0000][PE] low and high boundaries for proper pairs: (1, 792)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (423, 600, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (863.33, 758.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5455)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 67964 reads in 7.577 CPU sec, 7.671 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000292, nseq: 68220
	[0000][ M::kt_pipeline] read 68220 sequences (10000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 67998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 4948, 18, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (192, 272, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 642)
[0000][PE] mean and std.dev: (268.30, 116.11)
[0000][PE] low and high boundaries for proper pairs: (1, 792)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 429, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1498)
[0000][PE] mean and std.dev: (417.56, 339.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1947)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 67998 reads in 7.645 CPU sec, 7.780 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000094, nseq: 68310
	[0000][ M::kt_pipeline] read 68310 sequences (10000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 5067, 30, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (186, 262, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 627)
[0000][PE] mean and std.dev: (257.72, 111.64)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 703, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (742.27, 547.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68220 reads in 7.524 CPU sec, 7.606 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000278, nseq: 68174
	[0000][ M::kt_pipeline] read 68174 sequences (10000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 5053, 19, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (183, 261, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 627)
[0000][PE] mean and std.dev: (257.20, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (146, 555, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (732.33, 677.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68310 reads in 7.605 CPU sec, 7.697 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000216, nseq: 68352
	[0000][ M::kt_pipeline] read 68352 sequences (10000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 5136, 18, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (182, 258, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 641)
[0000][PE] mean and std.dev: (257.83, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 794)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (379, 600, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (780.33, 598.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68174 reads in 7.565 CPU sec, 7.709 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000008, nseq: 68206
	[0000][ M::kt_pipeline] read 68206 sequences (10000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 5060, 18, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (182, 258, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 623)
[0000][PE] mean and std.dev: (255.94, 111.99)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 497, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (706.17, 624.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68352 reads in 7.571 CPU sec, 7.652 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000196, nseq: 68280
	[0000][ M::kt_pipeline] read 68280 sequences (10000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 5051, 24, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (186, 262, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 627)
[0000][PE] mean and std.dev: (259.75, 111.62)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 1128, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (946.13, 740.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68206 reads in 7.575 CPU sec, 7.710 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000242, nseq: 68270
	[0000][ M::kt_pipeline] read 68270 sequences (10000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 5220, 21, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (189, 264, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (262.37, 113.18)
[0000][PE] low and high boundaries for proper pairs: (1, 781)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 647, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (876.29, 699.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68280 reads in 7.544 CPU sec, 7.635 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000281, nseq: 68254
	[0000][ M::kt_pipeline] read 68254 sequences (10000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 5207, 11, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (186, 262, 338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 642)
[0000][PE] mean and std.dev: (260.80, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 794)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (146, 159, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (487.70, 465.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68270 reads in 7.580 CPU sec, 7.674 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000115, nseq: 68152
	[0000][ M::kt_pipeline] read 68152 sequences (10000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 5069, 27, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (184, 258, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 631)
[0000][PE] mean and std.dev: (258.80, 112.32)
[0000][PE] low and high boundaries for proper pairs: (1, 780)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (331, 649, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (995.52, 758.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68254 reads in 7.528 CPU sec, 7.660 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 2914007, nseq: 19838
	[0000][ M::kt_pipeline] read 19838 sequences (2914007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 68152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 5089, 16, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (191, 263, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 629)
[0000][PE] mean and std.dev: (263.58, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (139, 532, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (584.19, 562.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 68152 reads in 7.416 CPU sec, 7.506 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 30427671, n: 19838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 1433, 4, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (190, 267, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 628)
[0000][PE] mean and std.dev: (262.14, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 19838 reads in 2.176 CPU sec, 2.252 real sec
[0000] read_chunk: 10000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 1
Processor is running @2594.097262 MHz
Runtime profile:

	Time taken for main_mem function: 172.50 sec

	IO times (sec) :
	Reading IO time (reads) avg: 5.26, (5.26, 5.26)
	Writing IO time (SAM) avg: 1.47, (1.47, 1.47)
	Reading IO time (Reference Genome) avg: 0.04, (0.04, 0.04)
	Index read time avg: 0.08, (0.08, 0.08)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 172.31
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 171.96, (171.96, 171.96)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 59.67, (59.67, 59.67)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 112.18, (112.18, 112.18)
		SMEM compute avg: 65.24, (65.24, 65.24)
		SAL compute avg: 5.21, (5.21, 5.21)
				MEM_SA avg: 3.02, (3.02, 3.02)

		BSW time, avg: 39.16, (39.16, 39.16)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
INFO:    Cleaning up image...
